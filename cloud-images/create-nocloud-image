#!/bin/bash

set -euo pipefail

# Creates a cloud-init seed image with some basic settings

function usage
{
    >&2 echo "Usage: $0 <destination>

Options:

  -a user-data
        Additional user data to be added, besides the default

  -h
        Show this message
  -H hostname
        Set custom hostname instead of an auto-generated string
  -i public-key
        Use specified public key, instead of the default
    "
}

while getopts ":a:hi:H:" opt; do
    case "${opt}" in
        a)
            additional_user_data="${OPTARG}"
            ;;
        h)
            usage
            exit 0
            ;;
        H)
            hostname="${OPTARG}"
            ;;
        i)
            public_key="${OPTARG}"
            ;;
        \?)
            log "Invalid option: -${OPTARG}"
            exit 1
            ;;
        :)
            log "Option -${OPTARG} requires an argument"
            exit 1
            ;;
    esac
done

shift "$((OPTIND - 1))"

# Get destination, and try to provide a default in case the user is lazy
destination="${1:-}"

if [ -z "${destination}" ]; then
    destination="$(mktemp -d)/cloud-init-seed.img"

elif ! touch "${destination}" 2> /dev/null; then
    >&2 echo "Error: can't write file \"${destination}\""
    exit 1
fi

rm -rf "${destination}"

# Sanitize public key
public_key=${public_key:-"$(ls ~/.ssh/*.pub 2> /dev/null | head -n1 || true)"}

if [ -z "${public_key}" ]; then
    >&2 echo "Error: public key not specified and no key found at default location"
    usage
    exit 1
fi
if ! [ -r "${public_key}" ]; then
    >&2 echo "Error: public key ${public_key} can't be read"
    exit 1
fi

# Build the file that will be inside the image
cloud_init_data="
#cloud-config
ssh_pwauth: False
users:
  - name: ${USER}
    ssh-authorized-keys:
      - $(< "${public_key}")
    sudo: 'ALL=(ALL) NOPASSWD:ALL'
hostname: ${hostname:-${USER}-vm-${RANDOM}}
${additional_user_data:-}
"

# Make the image
if command -v cloud-localds &> /dev/null; then
    cloud_init_file=$(mktemp)
    echo "${cloud_init_data}" > "${cloud_init_file}"
    cloud-localds "${destination}" "${cloud_init_file}"
    rm "${cloud_init_file}"
elif command -v mkisofs &> /dev/null; then
    mkiso_dir=$(mktemp -d)
    echo "${cloud_init_data}" > "${mkiso_dir}/user-data"
    touch "${mkiso_dir}/meta-data"
    mkisofs -o "${destination}" -volid cidata -joliet -rock "${mkiso_dir}"
    rm -rf "${mkiso_dir}"
else
    >&2 echo "ERROR: cloud-localds (apt install cloud-image-utils) or mkisofs \
(brew install cdrtools) required for generating NoCloud image"
    exit 1
fi

>&2 echo "NoCloud image created to ${destination}"
echo "${destination}"
